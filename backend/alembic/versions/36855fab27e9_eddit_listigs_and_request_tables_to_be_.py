"""eddit  listigs and request tables to be connected

Revision ID: 36855fab27e9
Revises: 2bc5def457ef
Create Date: 2025-07-20 15:15:42.993235

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '36855fab27e9'
down_revision: Union[str, Sequence[str], None] = '2bc5def457ef'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('listings', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('payments', 'paid_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.add_column('requests', sa.Column('listing_id', sa.Integer(), nullable=False))
    op.drop_constraint(op.f('requests_service_id_fkey'), 'requests', type_='foreignkey')
    op.create_foreign_key(None, 'requests', 'listings', ['listing_id'], ['id'], ondelete='CASCADE')
    op.drop_column('requests', 'service_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('requests', sa.Column('service_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'requests', type_='foreignkey')
    op.create_foreign_key(op.f('requests_service_id_fkey'), 'requests', 'services', ['service_id'], ['id'], ondelete='CASCADE')
    op.drop_column('requests', 'listing_id')
    op.alter_column('payments', 'paid_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('listings', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    # ### end Alembic commands ###
